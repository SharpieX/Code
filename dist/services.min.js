angular.module("stack.service",[]),angular.module("stack.service").factory("userService",["$q","$http","$stamplay","$rootScope",function(a,b,c,d){var e,f=!1;return{isLogged:function(){return f},setUserModal:function(c){var d=a.defer();return b({method:"GET",url:"/api/authUser/id",params:{id:c.uuid}}).then(function(a){a.data.err?2===a.data.err&&b({method:"POST",url:"/api/saveUser",data:c}).then(function(a){a.err||(f=!0,e=a.data.data,d.resolve(a))}):(f=!0,e=a.data.data,d.resolve(a))})["catch"](function(a){d.reject(a)}),d.promise},getUserModel:function(){return e}}}]).factory("usersService",["$q","$stamplay","$http",function(a,b,c){return{getUsers:function(){return c({method:"GET",url:"/api/getUsers"})},getById:function(c){var d=a.defer();return b.User.get({_id:c}).then(function(a){d.resolve(a.data[0])})["catch"](function(a){d.reject(a)}),d.promise},searchUser:function(c){var d=a.defer();return b.User.get(c).then(function(a){d.resolve(a.data)})["catch"](function(a){d.reject(a)}),d.promise}}}]),angular.module("stack.service").factory("tagsService",["$http",function(a){return{getTags:function(b){return a({method:"GET",url:"/api/getTags"})},getById:function(a){},searchTag:function(b){return a({method:"POST",url:"/api/searchTags",data:b})}}}]),angular.module("stack.service").factory("questionsService",["$q","usersService","tagsService","answersService","$stamplay","$http",function(a,b,c,d,e,f){function g(a){return a.actions.votes.users_upvote.length-a.actions.votes.users_downvote.length}return{getQuestions:function(a){return f({method:"GET",url:"/api/getQuestions"})},searchQuestion:function(b){var c=a.defer();return f({method:"GET",url:"/api/searchQuestion/id",params:{id:b}}).then(function(a){var b=a.data.data;c.resolve(b)})["catch"](function(a){c.reject(a)}),c.promise},getById:function(b){var c=a.defer();return this.searchQuestion(b).then(function(a){c.resolve(a)}),c.promise},updateViews:function(a){var b=a.views||0;return b++,e.Object("question").patch(a._id,{views:b})},updateModel:function(a,b){var c={};return b.forEach(function(b){if("answers"!==b&&"owner"!==b&&"tags"!==b&&"author"!==b)c[b]=a[b];else{for(var d=[],e=0;e<a[b].length;e+=1)d.push(a[b][e]._id);c.answers=d}}),c._id=a._id,f({method:"POST",url:"/api/updateQuestion",data:c})},voteUp:function(b){var c=a.defer(),d=b;return e.Object("question").upVote(b._id).then(function(a){d.actions=a.actions,c.resolve(g(d))})["catch"](function(a){c.reject(a)}),c.promise},voteDown:function(b){var c=a.defer(),d=b;return e.Object("question").downVote(b._id).then(function(a){d.actions=a.actions,c.resolve(g(d))})["catch"](function(a){c.reject(a)}),c.promise},commentQuestion:function(b,c){var d=a.defer(),f=b;return e.Object("question").comment(f._id,c).then(function(a){f.actions=a.actions,d.resolve(f)})["catch"](function(a){d.reject(a)}),d.promise},saveQuestion:function(a){return f({method:"POST",url:"/api/saveQuestion",data:a})},submitAnswer:function(a,b){var c=a.answers;return c.push(b.data.answer),a.answers=c,this.updateModel(a,["answers"])}}}]),angular.module("stack.service").factory("answersService",["$q","usersService","$stamplay","$http",function(a,b,c,d){function e(a){return a.actions.votes.users_upvote.length-a.actions.votes.users_downvote.length}return{createAnswer:function(a){return d({method:"POST",url:"/api/saveAnswer",data:a})},updateModel:function(a,b){var c={};return b.forEach(function(b){c[b]=a[b]}),c._id=a._id,d({method:"POST",url:"/api/updateAnswer",data:c})},voteUp:function(b){var d=a.defer(),f=b;return c.Object("answer").upVote(f._id).then(function(a){f.actions=a.actions,d.resolve(e(f))})["catch"](function(a){d.reject(a)}),d.promise},voteDown:function(b){var d=a.defer(),f=b;return c.Object("answer").downVote(f._id).then(function(a){f.actions=a.actions,d.resolve(e(f))})["catch"](function(a){d.reject(a)}),d.promise},comment:function(b,d){var e=a.defer(),f=b;return c.Object("answer").comment(f._id,d).then(function(a){f.actions=a.actions,e.resolve()})["catch"](function(a){e.reject(a)}),e.promise},getById:function(a){d({method:"GET",url:"/api/getAnswer/id",params:{id:a}})}}}]);